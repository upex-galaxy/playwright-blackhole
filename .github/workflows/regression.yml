#!No modificar Archivo. Este pipeline es para correr todos los tests como Regression.
name: 🧪Playwright Regression Testing
run-name: ${{github.actor}}👨🏻‍🔬 ran Regression in ${{github.ref_name}}
on:
  push:
    branches: [QA]

jobs:
  RegressionTesting:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: ['chrome', 'firefox', 'edge', 'iphone'] #? Runs tests in 4 different browsers

    steps:

    - name: 📘 Checkout Repo
      uses: actions/checkout@v3

    - name: 💿 Installing Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: 💿Yarn Setup
      uses: DerYeger/yarn-setup-action@master
      with:
        node-version: 18

    - name: 🧬 Install Project Dependencies
      run: |
        yarn

    - name: 🎭️ Installing Playwright And Browsers
      run: |
        yarn pw:install

    - name: ✅ 🧪Regression Tests Execution on ${{ matrix.browser }}
      run: |
        yarn regression:${{ matrix.browser }}

    - name: 📊Generate Allure Report for ${{ matrix.browser }}
      if: always()
      run: |
        yarn allure:gen:${{ matrix.browser }}

    - name: 📡Upload Artifact - Allure Report for ${{ matrix.browser }}
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: allure-${{ matrix.browser }}-report
        path: allure-report/${{ matrix.browser }}
        retention-days: 15

    - name: 📡Upload Artifact - Test Reports for ${{ matrix.browser }}
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: html-${{ matrix.browser }}-report
        path: test-html-report/${{ matrix.browser }}
        retention-days: 15

    - name: 📦️ Set testExecKey for Jira XRay
      if: always()
      run: |
        if [[ "${{ matrix.browser }}" == "chrome" ]]; then
          echo "TXID=GX3-1533" >> $GITHUB_ENV
        elif [[ "${{ matrix.browser }}" == "firefox" ]]; then
          echo "TXID=GX3-1685" >> $GITHUB_ENV
        elif [[ "${{ matrix.browser }}" == "edge" ]]; then
          echo "TXID=GX3-1686" >> $GITHUB_ENV
        elif [[ "${{ matrix.browser }}" == "iphone" ]]; then
          echo "TXID=GX3-1687" >> $GITHUB_ENV
        fi
    - name: 📦️ Use testExecKey
      run: echo "The testExecKey is ${{ env.TXID }}"

    - name: ✅Import Test Results to Xray
      if: always()
      uses: mikepenz/xray-action@v2
      with:
        username: ${{secrets.XRAY_CLIENT_ID}}
        password: ${{secrets.XRAY_CLIENT_SECRET}}
        testFormat: 'junit'
        testPaths: 'test-junit-report/${{ matrix.browser }}-importer-report.xml'
        testExecKey: ${{ env.TXID }} #* Este debería ser el TX predeterminado para este Pipeline de Regresión.
        projectKey: 'GX3'

  Create-PullRequest:
    needs: [RegressionTesting]
    runs-on: ubuntu-latest
    steps:

    - name: 💻Checkout
      uses: actions/checkout@v3

    - name: 🧬 Check for changes
      id: changes
      run: |
        git fetch origin main
        DIFF=$(git diff --name-only origin/main)
        if [ "$DIFF" != "" ]; then
          echo "::set-output name=changes::true"
        fi

    - name: 📦️ Create Pull Request
      if: steps.changes.outputs.changes == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const { repo, owner } = context.repo;
          const result = await github.rest.pulls.create({
          title: '✅[QA REGRESSION PASSED]: Ready to Merge into MAIN',
          owner,
          repo,
          head: '${{ github.ref_name }}',
          base: 'main',
          body: [
              'Update branch by Automation Pipeline:',
              '- (CI) Last Story Test Execution PASSED✅',
              '- (CI) Regression Test Execution PASSED✅',
              '🆗No Conflicts in Repo Source Branch'
          ].join('\n')
          });
          github.rest.issues.addLabels({
          owner,
          repo,
          issue_number: result.data.number,
          labels: ['autoPullRequest']
          });

  AutoMerge-into-Main:
    needs: [Create-PullRequest]
    runs-on: ubuntu-latest
    steps:
    - name: 🧬Merge QA -> MAIN
      uses: devmasx/merge-branch@master
      with:
        type: now
        label_name: 'autoPullRequest'
        target_branch: 'main' #RAMA PRINCIPAL DEL REPOSITORIO PRESENTE
        github_token: ${{ github.token }}
