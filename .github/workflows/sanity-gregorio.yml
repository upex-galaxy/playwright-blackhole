#*🤖Este Pipeline de CI se activa al PUSHEAR o MERGEAR en ramas de tareas que no sean QA ni Main, y consiste en ejecutar los tests de una US e importar los resultados a Jira!🚀
#*👩🏻‍🔬Para utilizar este Pipeline de Ari, sigue los siguientes pasos:
#todo: 1 -> Crea tu propio archivo sanity.yml con tu username de GitHub, ejemplo sanity-saiotest.yml
#todo: 2 -> Copia el contenido de este archivo yml y pégalo en tu nuevo archivo yml con tu username.
#todo: 3 -> Modifica el trigger del Push en donde dice "TuBranchAqui", coloca tu nombre tal cual de tu rama git.
#todo: 4 -> Modifica el archivo de prueba a ejectuar en el script del "yarn test" (ver ejemplo en este archivo)
#todo: 5 -> Modifica la propiedad: "testExecKey" con tu ID del TX de Jira para importar automáticamente el resultado.
#todo: 6 -> Recuerda modificar el projectKey correspondiente, si estás en L3, debe ser GX3 y así...
#todo: 7 -> Listo! Guarda los cambios (git add + git commit) y pushea (git push) para ejectutar este Pipeline!
#*Resultado: Debería ejecutarse este Pipeline de GitHub Actions y correr cada uno de los Jobs declarados aquí.
name: 🧪Playwright Sanity Testing
run-name: ${{github.actor}}👨🏻‍🔬 ran TestSuite in ${{github.ref_name}}
on:
  push:
    branches: ['GX3-3831-⚡️-tools-qa-elements-buttons'] #! Cambia "TuBranchAqui" por el nombre de tu rama de tarea.

jobs:
  TestSuite:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: 📘 Checkout Repo
      uses: actions/checkout@v3

    - name: 💿 Installing Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: 💿Yarn Setup
      uses: DerYeger/yarn-setup-action@master
      with:
        node-version: 18

    - name: 🧬 Install Project Dependencies
      run: |
        yarn

    - name: 🎭️ Installing Playwright And Browsers
      run: |
        yarn pw:install

    - name: ✅ 🧪Test Suite Execution
      run: | #todo: EDITAR AQUÍ EL ARCHIVO SUITE A EJECUTAR:
        yarn test:ci tests/specs/elements/button_GX3-3831.test.ts

    - name: 📊Generate Allure Report
      run: |
        yarn allure:open

    - name: 📡Upload Artifact - Allure Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-report
        path: allure-report
        retention-days: 15

    - name: ✅Import Test Results to Xray
      if: always()
      uses: mikepenz/xray-action@v2
      with:
        username: ${{secrets.XRAY_CLIENT_ID}}
        password: ${{secrets.XRAY_CLIENT_SECRET}}
        testFormat: 'junit'
        testPaths: 'test-junit-report/main-importer-report.xml'
        testExecKey: 'GX3-3838' #!Cambiar a tu TX correspondiente.
        projectKey: 'GX3' #!Cambiar a tu Proyecto Level correspondiente.

    - name: 🔔Slack Notification of Done
      if: always()
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Ari✨
        SLACK_MESSAGE: ':test_tube: BLACKHOLE Playwright Project -- Test Execution is Done and updated in Jira :rocket:'
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: https://image.cdn2.seaart.ai/2023-12-06/clo9g0h4msbc73ac2sog/99e1abc36f32945cd4bacf5ee7448e96194545f7_high.webp
